import java.util.Scanner;

/**
 * 题目描述
 *       小明在他的果园里种了一些苹果树。为了保证苹果的品质，在种植过程中要进行若干轮疏果操作，也就是提前从树上把不好的苹果去掉。第一轮疏果操作开始前，小明记录了每棵树上苹果的个数。每轮疏果操作时，小明都记录了从每棵树上去掉的苹果个数。在最后一轮疏果操作结束后，请帮助小明统计相关的信息。
 * 输入格式
 *       从标准输入读入数据。
 *       第1行包含两个正整数N和M，分别表示苹果树的棵数和疏果操作的轮数。
 *       第1+i行（1<= i <= N），每行包含M+1个整数ai0,ai1,…,aiM。其中ai0为正整数，表示第一轮疏果操作开始前第i棵树上苹果的个数。aij（1 <= j <= M）为零或负整数，表示第j轮疏果操作时从第i棵树上去掉的苹果个数。如果为0，表示没有去掉苹果；如果为负，其绝对值为去掉的苹果个数。
 *       每行中相邻两个数之间用一个空格分隔。
 * 输出格式
 *       输出到标准输出。
 *       输出只有一行，包含三个整数T、k和P。其中，
 *         T为最后一轮疏果操作后所有苹果树上剩下的苹果总数（假设苹果不会因为其它原因减少）；
 *         k为疏果个数（也就是疏果操作去掉的苹果个数）最多的苹果树编号；
 *         P为该苹果树的疏果个数。
 *       相邻两个数之间用一个空格分隔。输入的数据保证是正确的，也就是说，每棵树在全部疏果操作结束后剩下的苹果个数是非负的。
 * 样例1
 * 输入：
 *
 * 3 3
 * 73 -8 -6 -4
 * 76 -5 -10 -8
 * 80 -6 -15 0
 * 1
 * 2
 * 3
 * 4
 * 输出：
 *
 * 167 2 23
 * 1
 * 样例解释：
 *       第1棵苹果树的疏果个数为8+6+4 = 18， 第2棵为5+10+8 = 23，第3棵为6+15+0 = 21，因此最后一轮疏果操作后全部苹果树上的苹果个数总和为（73 -18）+ （76 - 23）+ （80 - 21）= 167，疏果个数最多的是第2棵树，其疏果个数为23。
 * 样例2
 * 输入：
 *
 * 2 2
 * 10 -3 -1
 * 15 -4 0
 * 1
 * 2
 * 3
 * 输出：
 *
 * 17 1 4
 * 1
 * 样例解释：
 *       两棵树的疏果个数均为4，应输出编号最小的第1棵数。
 */
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        int[][] arr = new int[n][m+2];
        for (int i=0;i<n;i++){
            for (int j=0;j<m+1;j++){
                arr[i][j] = scanner.nextInt();
            }
        }
        int temp = 0;
        int sum = 0;
        for (int i=0;i<n;i++){
            int s = arr[i][0];
            for (int j=1;j<m+1;j++){
                s = s + arr[i][j];
            }
            sum = s + sum;
            s = 0;
        }
        System.out.print(sum+" ");
        for (int i=0;i<n;i++){
            int t = 0;
            for (int j=1;j<m+1;j++){
                t = t + arr[i][j];
            }
            arr[i][m+1] = Math.abs(t);
            if (Math.abs(t) > temp){
                temp = Math.abs(t);
            }
            t = 0;
        }
        for (int i=0;i<n;i++){
            if (arr[i][m+1] == temp){
                System.out.print(i+1+" ");
                break;
            }
        }
        System.out.print(temp);
    }
}
